apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'spring-boot'
apply plugin: 'pl.allegro.tech.build.axion-release'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("pl.allegro.tech.build:axion-release-plugin:${axionReleasePluginVersion}")
        classpath("se.transmode.gradle:gradle-docker:${dockerVersion}")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'uk.co.caeldev'

mainClassName = 'uk.co.caeldev.config.manager.api.Application'

repositories {
    jcenter()
    mavenCentral()
}

configurations.all {
  // check for updates every build
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

scmVersion {
    tag {
        prefix = 'RELEASE'
    }
}

version = scmVersion.version

jar {
    baseName = rootProject.name
    version = version
}

docker {
    maintainer = 'Adolfo Custidiano <adolfoecs@gmail.com>'
    baseImage = 'java:8'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = "${jar.baseName}"
    tagVersion = "${jar.version}"
    tag = "adolfoecs/${applicationName}"

    runCommand("mkdir -p /opt/applications")

    addFile("${buildDir}/distributions/${project.name}-${project.version}.tar", "/opt/applications/")

    workingDir("/opt/applications/${project.name}-${project.version}/")

    entryPoint(["bin/${project.name}"])

}

configurations {
    testCompile.exclude group: 'org.mortbay.jetty', module: 'servlet-api'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.hateoas:spring-hateoas")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile("com.google.code.gson:gson:${gsonVersion}")
    compile("com.google.guava:guava:${guavaVersion}")

    compile("uk.co.caeldev:spring-morphia:0.1.0")
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.3.0'

    compile("uk.co.caeldev:spring-mvc-utils:${springMvcUtilsVersion}")

    compile("org.apache.commons:commons-lang3:${apacheCommonsLang3Version}")
    compile group: 'com.github.mideo', name:'salesforce-api-client', version: '0.0.1'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.4'
    compile group: 'org.codehaus.groovy', name: 'groovy-xml', version: '2.4.4'
    compile group: 'net.sf.supercsv', name: 'super-csv', version: '2.4.0'
    compile group: 'net.sf.supercsv', name: 'super-csv-java8', version: '2.4.0'

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.assertj:assertj-core:${assertjCoreVersion}")
    testCompile("uk.org.fyodor:fyodor-core:${fyodorVersion}")
    testCompile("uk.org.fyodor:fyodor-junit:${fyodorVersion}")
    testCompile("com.jayway.restassured:rest-assured:${restAssuredVersion}")
    testCompile("com.github.tomakehurst:wiremock:${wiremockVersion}")
    testCompile("com.github.fakemongo:fongo:${fongoVersion}")
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

task wrapper(type: Wrapper) {
    gradleVersion = rootGradleVersion
}
